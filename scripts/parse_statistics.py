import json
import os

pypi_list = [
    '151.101.201.63', '151.101.249.63', '151.101.128.223', '151.101.0.223',
    '151.101.192.223', '151.101.64.223', '151.101.1.63', '151.101.65.63',
    '151.101.129.63', '151.101.193.63', '199.232.65.63', '199.232.64.223',
    '151.101.200.223'
]


def iterate_objects():
    base_dir = '../files'
    packages = os.listdir(base_dir)
    for i, package in enumerate(packages):
        folder = os.path.join(base_dir, package)
        filename = os.path.abspath(
            os.path.join(folder, '{}_output.json'.format(package)))
        package = {}
        with open(filename) as output_file:
            try:
                package = json.loads(output_file.read())
            except Exception as e:
                print('Unable to parse {} - {}'.format(filename, e))
                continue
        yield package


def main():
    statistics = {
        'network_connections': {},
        'unique_hosts': {},
        'commands': 0,
    }
    for i, pkg in enumerate(iterate_objects()):
        if i % 10000 == 0:
            print('Progress report: {} packages scanned'.format(i))
        pkg_name = pkg['package']['name']
        seen_addresses = []
        for record in pkg['results']['dns']:
            name = record['name']
            if name == 'pypi.python.org':
                continue
            statistics['network_connections'][pkg_name] = True
            statistics['unique_hosts'][record['name']] = True
            addresses = record['addresses']
            for address in addresses:
                if address not in seen_addresses:
                    seen_addresses.append(address)
        made_connections = pkg['results']['connections'] or []
        for connection in made_connections:
            if connection['address'] in seen_addresses or connection[
                    'address'] in pypi_list:
                continue
            statistics['unique_hosts'][connection['address']] = True
            statistics['network_connections'][pkg_name] = True

        if pkg['results']['commands']:
            statistics['commands'] += 1
    
    statistics['network_connection_count'] = len(statistics['network_connections'])
    statistics['unique_host_count'] = len(statistics['unique_hosts'])
    print(statistics)


if __name__ == "__main__":
    main()
